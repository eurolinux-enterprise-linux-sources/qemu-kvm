From ad73db3bc3783ac6d21eddcf9efa888769ca59d7 Mon Sep 17 00:00:00 2001
Message-Id: <ad73db3bc3783ac6d21eddcf9efa888769ca59d7.1484342411.git.ymankad@redhat.com>
In-Reply-To: <df26b13347392089e5699a6be872de7806a36a8c.1484342411.git.ymankad@redhat.com>
References: <df26b13347392089e5699a6be872de7806a36a8c.1484342411.git.ymankad@redhat.com>
From: "wexu@redhat.com" <wexu@redhat.com>
Date: Wed, 21 Dec 2016 06:16:13 -0500
Subject: [CHANGE 8/8] net: check packet payload length
To: ymankad@redhat.com

RH-Author: wexu@redhat.com
Message-id: <1482300973-29867-2-git-send-email-wexu@redhat.com>
Patchwork-id: 73090
O-Subject: [[RHEL-6.9/6.8 qemu-kvm/qemu-kvm-rhev Patch]] net: check packet payload length
Bugzilla: 1398213 1398214
RH-Acked-by: Stefan Hajnoczi <stefanha@redhat.com>
RH-Acked-by: Fam Zheng <famz@redhat.com>
RH-Acked-by: Michael S. Tsirkin <mst@redhat.com>
RH-Acked-by: Xiao Wang <jasowang@redhat.com>

From: Prasad J Pandit <pjp@fedoraproject.org>

While computing IP checksum, 'net_checksum_calculate' reads
payload length from the packet. It could exceed the given 'data'
buffer size. Add a check to avoid it.

This patch is to fix CVE-2016-2857.
https://access.redhat.com/security/cve/CVE-2016-2857

Reported-by: Liu Ling <liuling-it@360.cn>
Signed-off-by: Prasad J Pandit <pjp@fedoraproject.org>
Signed-off-by: Jason Wang <jasowang@redhat.com>
(cherry picked from commit 362786f14a753d8a5256ef97d7c10ed576d6572b)
Signed-off-by: Wei Xu <wexu@redhat.com>
Signed-off-by: Yash Mankad <ymankad@redhat.com>
---
 net/checksum.c | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

diff --git a/net/checksum.c b/net/checksum.c
index 4046932..0f9cfc2 100644
--- a/net/checksum.c
+++ b/net/checksum.c
@@ -57,6 +57,11 @@ void net_checksum_calculate(uint8_t *data, int length)
     int hlen, plen, proto, csum_offset;
     uint16_t csum;
 
+    /* Ensure data has complete L2 & L3 headers. */
+    if (length < 14 + 20) {
+        return;
+    }
+
     if ((data[14] & 0xf0) != 0x40)
 	return; /* not IPv4 */
     hlen  = (data[14] & 0x0f) * 4;
@@ -74,8 +79,9 @@ void net_checksum_calculate(uint8_t *data, int length)
 	return;
     }
 
-    if (plen < csum_offset+2)
-	return;
+    if (plen < csum_offset + 2 || 14 + hlen + plen > length) {
+        return;
+    }
 
     data[14+hlen+csum_offset]   = 0;
     data[14+hlen+csum_offset+1] = 0;
-- 
2.7.4

