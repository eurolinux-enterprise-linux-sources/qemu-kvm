From 4d6c586734d49230edb0cf4d9e09e09e61079738 Mon Sep 17 00:00:00 2001
From: Gerd Hoffmann <kraxel@redhat.com>
Date: Fri, 13 Apr 2018 05:51:28 -0300
Subject: [PATCH 2/2] vga: add sanity checks

RH-Author: Gerd Hoffmann <kraxel@redhat.com>
Message-id: <20180413055129.17657-3-kraxel@redhat.com>
Patchwork-id: 79560
O-Subject: [RHEL-6.10 qemu-kvm PATCH 2/3] vga: add sanity checks
Bugzilla: 1553674
RH-Acked-by: Stefan Hajnoczi <stefanha@redhat.com>
RH-Acked-by: Dr. David Alan Gilbert <dgilbert@redhat.com>
RH-Acked-by: Thomas Huth <thuth@redhat.com>

Turn off surface sharing (vga memory being used directly as backing
storage for DisplaySurfaces) in case we find anything unusual.  That way
vga_read_*() helpers will handle vga memory access and make sure no oob
access will happen.

Fixes: CVE-2018-7858
Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
Signed-off-by: Wainer dos Santos Moschetta <wainersm@redhat.com>
---
 hw/vga.c | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/hw/vga.c b/hw/vga.c
index 86302cfc2c..1e8bc68680 100644
--- a/hw/vga.c
+++ b/hw/vga.c
@@ -1839,6 +1839,20 @@ static void vga_draw_graphic(VGACommonState *s, int full_update)
         share_surface = true;
     }
 
+    /*
+     * Check if we find anything unusual.  If so disable surface
+     * sharing, so the surface backing storage is *not* vga memory.
+     * Display updating goes through the vga_draw_line_* functions
+     * instead.  vga_read_* helpers will be used then and they will
+     * make sure we don't have any oob vga memory access.
+     */
+    if (disp_width * s->get_bpp(s) / 8 != s->line_offset) {
+        share_surface = false;
+    }
+    if (s->start_addr * 4 + s->line_offset * height > s->vbe_size) {
+        share_surface = false;
+    }
+
     if (s->line_offset != s->last_line_offset ||
         disp_width != s->last_width ||
         height != s->last_height ||
-- 
2.13.6

